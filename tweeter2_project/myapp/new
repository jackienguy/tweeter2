# from uuid import uuid4

# while true:
#     print(uuid4().hex)
#     input()
#     print(secrets.token_hex(8))
#     secrets.token_urlsafe


# have this call every time someone logs in and store in the db

  # # INPUT CODE for valid valid entry
            # ePattern = "[A-Za-Z0-9._]+@[A-Za-z]+\.(com|ca)"
            # if (re.fullmatch(ePattern, user_email)):
            #     print('valid email')
            # else:
            #     return('invalid email')

    # if (result != None):
                #     followers = []
                #     follower = {
                #         "userId": "id",
                #         "follwerEmail": "email",
                #         "followerUsername": "username",
                #         "followerBio": "bio",
                #         "followerBirthdate": "birthdate"
                #     }


  #  if user['email'] == email and user['password'] == password:
  #               login_token = uuid4().hex
  #               cursor.execute("INSERT INTO user_session(user_id, loginToken) VALUES(?,?)", [id, login_token])
  #               conn.commit()
  #               print (login_token) 
  #               return Response(json.dumps(user, login_token, default=str),
  #                               mimetype="application/json",
  #                               status=200)  

# Sign in security:

# email_exist = User.query.filter_by(email=email).first()


#   if email_exist:
#         return("Email is already in user")
#   elif len(email) < 10:
#     return ("email too shor", category='error')

#   elif len(password) < 6:
#     return ("Password need to be at least 6 characters long")
#   else:
#     return Response